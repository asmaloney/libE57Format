name: Build

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build_type: ['Debug', 'Release']
        config:
          - { name: '🍏 macOS Clang', os: macos-latest }
          - { name: '🐧 Linux GCC', os: ubuntu-latest }
          - { name: '🪟 Windows MSVC', os: windows-latest }

    name: ${{ matrix.config.name }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.config.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Checkout Test Data
        uses: actions/checkout@v3
        with:
          repository: 'asmaloney/libE57Format-test-data'
          path: libE57Format-test-data

      - name: Install Dependencies (macOS)
        if: matrix.config.os == 'macos-latest'
        run: |
          brew install ccache ninja xerces-c

      - name: Install Dependencies (Linux)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache libxerces-c-dev ninja-build
          sudo locale-gen fr_FR

      - name: Install Dependencies (Windows)
        if: matrix.config.os == 'windows-latest'
        uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge

      - name: Install More Dependencies (Windows)
        if: matrix.config.os == 'windows-latest'
        shell: bash -el {0}
        run: |
          conda install xerces-c=3.2.4
          choco upgrade ccache ninja
          ccache --version | head -n 1
          echo "ninja $(ninja --version)"

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: '5G'
          key: ${{ matrix.config.os }}-${{ matrix.build_type }}

      - name: Configure MSVC console (Windows)
        if: matrix.config.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Set environment for MSVC (Windows)
        if: matrix.config.os == 'windows-latest'
        run: |
          # Set these env vars so cmake picks the correct compiler
          echo "CXX=cl.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "CC=cl.exe" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Configure (Debug)
        if: matrix.build_type == 'Debug'
        run: >
          mkdir libE57Format-build

          cmake
          -B libE57Format-build
          -G "Ninja"
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DE57_MAX_DEBUG=1
          .

      - name: Configure (Release)
        if: matrix.build_type == 'Release'
        run: >
          mkdir libE57Format-build

          cmake
          -B libE57Format-build
          -G "Ninja"
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DE57_DEBUG=0
          .

      - name: Build
        run: cmake --build libE57Format-build

      - name: Test
        run: libE57Format-build/test/testE57
