name: Build

on: [push, pull_request]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 🍏 macOS (Clang - Debug)
            os: macos-latest
            platform: macos
            build_type: Debug
            build_shared: OFF
          - name: 🍏 macOS (Clang - Release)
            os: macos-latest
            platform: macos
            build_type: Release
            build_shared: OFF
          - name: 🍏 macOS (Clang, Shared - Release)
            os: macos-latest
            platform: macos
            build_type: Release
            build_shared: ON

          - name: 🐧 Linux (GCC - Debug)
            os: ubuntu-latest
            platform: linux
            build_type: Debug
            build_shared: OFF
          - name: 🐧 Linux (GCC - Release)
            os: ubuntu-latest
            platform: linux
            build_type: Release
            build_shared: OFF
          - name: 🐧 Linux (GCC, Shared - Release)
            os: ubuntu-latest
            platform: linux
            build_type: Release
            build_shared: ON

          - name: 🪟 Windows (MSVC - Debug)
            os: windows-latest
            platform: windows
            build_type: Debug
            build_shared: OFF
          - name: 🪟 Windows (MSVC - Release)
            os: windows-latest
            platform: windows
            build_type: Release
            build_shared: OFF
          - name: 🪟 Windows (MSVC, Shared - Release)
            os: windows-latest
            platform: windows
            build_type: Release
            build_shared: ON

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Checkout Test Data
        uses: actions/checkout@v3
        with:
          repository: 'asmaloney/libE57Format-test-data'
          path: libE57Format-test-data

      - name: Install Dependencies (macOS)
        if: matrix.platform == 'macos'
        run: |
          brew install ccache ninja xerces-c

      - name: Install Dependencies (Linux)
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache libxerces-c-dev ninja-build
          sudo locale-gen fr_FR

      - name: Install Dependencies (Windows)
        if: matrix.platform == 'windows'
        uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge

      - name: Install More Dependencies (Windows)
        if: matrix.platform == 'windows'
        shell: bash -el {0}
        run: |
          conda install xerces-c=3.2.4
          choco upgrade ccache ninja
          ccache --version | head -n 1
          echo "ninja $(ninja --version)"

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: '5G'
          key: ${{ matrix.os }}-${{ matrix.build_type }}

      - name: Configure MSVC console (Windows)
        if: matrix.platform == 'windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Output conda info (Windows)
        if: matrix.platform == 'windows'
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort

      - name: Configure (Debug)
        if: matrix.build_type == 'Debug'
        run: >
          mkdir libE57Format-build

          cmake
          -B libE57Format-build
          -G "Ninja"
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DE57_BUILD_SHARED=${{ matrix.build_shared }}
          -DE57_MAX_DEBUG=1
          .

      - name: Configure (Release)
        if: matrix.build_type == 'Release'
        run: >
          mkdir libE57Format-build

          cmake
          -B libE57Format-build
          -G "Ninja"
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DE57_BUILD_SHARED=${{ matrix.build_shared }}
          -DE57_DEBUG=0
          .

      - name: Build
        run: cmake --build libE57Format-build

      - name: Test
        # I cannot get this to run on Windows with a shared lib.
        # It's not giving an error so I have no idea what's happening.
        if: ${{ !(matrix.platform == 'windows' && matrix.build_shared == 'ON') }}
        run: libE57Format-build/test/testE57
